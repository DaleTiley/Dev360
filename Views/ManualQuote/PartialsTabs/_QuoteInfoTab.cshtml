@model MillenniumWebFixed.ViewModels.ManualQuoteViewModel

<div class="row mb-1">
    <div class="col-md-4">
        @Html.LabelFor(m => m.QuoteNo, new { @class = "form-label small" })
        @Html.TextBoxFor(m => m.QuoteNo, new { @class = "form-control form-control-sm readonly-grey", @readonly = "readonly", placeholder = "Auto Generated" })
        @Html.Hidden("quoteId", Model.Id)
    </div>
    <div class="col-md-4">
        @Html.LabelFor(m => m.RevisionID, new { @class = "form-label small" })
        @Html.TextBoxFor(m => m.RevisionID, new { @class = "form-control form-control-sm readonly-grey", @readonly = "readonly", placeholder = "Auto Generated" })
    </div>
    <div class="col-md-4">
        @Html.LabelFor(m => m.ImportDate, new { @class = "form-label small" })
        @Html.TextBoxFor(m => m.ImportDate, "{0:yyyy-MM-dd}", new { @class = "form-control form-control-sm required-field", type = "date" })
    </div>
</div>
<div class="row mb-1">
    <div class="col-md-4">
        @Html.LabelFor(m => m.QuantityOfUnits, new { @class = "form-label small" })
        @Html.TextBoxFor(m => m.QuantityOfUnits, new { @class = "form-control form-control-sm required-field", type = "number" })
    </div>
    <div class="col-md-4">
        @Html.LabelFor(m => m.DueDate, new { @class = "form-label small" })
        @Html.TextBoxFor(m => m.DueDate, "{0:yyyy-MM-dd}", new { @class = "form-control form-control-sm required-field", type = "date" })
    </div>
    <div class="col-md-4">
        @Html.LabelFor(m => m.DesignerId, new { @class = "form-label small" })
        @Html.DropDownListFor(model => model.DesignerId,
            new SelectList(Model.DesignerOptions, "Value", "Text"),
            "---",
            new { @class = "form-select form-select-sm required-field" })
    </div>
</div>
<div class="row mb-1">
    <div class="col-md-6">
        @Html.LabelFor(m => m.ImportedPMRJBFileRef, new { @class = "form-label small" })

        <div class="input-group input-group-sm">
            @Html.TextBoxFor(m => m.ImportedPMRJBFileRef, new { @class = "form-control required-field", @readonly = "readonly", id = "ImportedPMRJBFileRef" })

            <input type="file" id="pmrjbFileInput" accept=".json" style="display:none;" />

            <button type="button" class="btn btn-outline-secondary" onclick="document.getElementById('pmrjbFileInput').click();">Browse</button>
        </div>
    </div>
</div>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const fileInput = document.getElementById('pmrjbFileInput');
            const textBox = document.getElementById('ImportedPMRJBFileRef');

            fileInput?.addEventListener('change', function () {
                const file = this.files[0];
                if (file) {
                    if (!file.name.toLowerCase().endsWith('.json')) {
                        alert('Only .json files are allowed.');
                        this.value = '';
                        return;
                    }

                    textBox.value = file.name; // only filename, not full path
                }
            });
        });
    </script>

