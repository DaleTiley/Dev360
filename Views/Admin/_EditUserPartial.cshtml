@model MillenniumWebFixed.Models.AppUser

@using (Html.BeginForm("EditUser", "Admin", FormMethod.Post, new { id = "editUserForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)

    <style>
        .btn.theme-button {
            justify-content: center;
        }
    </style>
    <div class="container-fluid small">
        <div class="row g-3">
            <!-- LEFT COLUMN -->
            <div class="col-md-6">
                <div class="mb-2">
                    <label class="form-label fw-semibold">Username</label>
                    @Html.TextBoxFor(m => m.Username, new { @class = "form-control form-control-sm", placeholder = "Enter username" })
                </div>

                <div class="mb-2">
                    <label class="form-label fw-semibold">Full Name</label>
                    @Html.TextBoxFor(m => m.FullName, new { @class = "form-control form-control-sm", placeholder = "Full name" })
                </div>

                <div class="mb-3">
                    <label class="form-label fw-semibold">Email</label>
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-sm", type = "email", placeholder = "Email address" })
                </div>

                <hr class="my-2" />
                <small class="text-muted mb-1 d-block">Security</small>

                <div class="mb-2">
                    <label class="form-label fw-semibold">New Password</label>
                    @Html.PasswordFor(m => m.PasswordHash, new { @class = "form-control form-control-sm", placeholder = "Leave blank to keep existing password", autocomplete = "new-password" })
                </div>
            </div>

            <!-- RIGHT COLUMN -->
            <div class="col-md-6">
                <div class="mb-2">
                    <label class="form-label fw-semibold">User Level</label>
                    @Html.DropDownListFor(m => m.UserLevel,
                        new SelectList(new[] { "Admin", "Standard", "ReadOnly" }, Model.UserLevel),
                        new { @class = "form-select form-select-sm" })
                </div>

                <hr class="my-2" />
                <small class="text-muted mb-1 d-block">Employment</small>

                <div class="row g-2">
                    <div class="col-sm-6">
                        <label class="form-label fw-semibold">Designation</label>
                        @Html.TextBoxFor(m => m.Designation, new { @class = "form-control form-control-sm", placeholder = "e.g. Estimator" })
                    </div>
                    <div class="col-sm-6">
                        <label class="form-label fw-semibold">Department</label>
                        @Html.TextBoxFor(m => m.Department, new { @class = "form-control form-control-sm", placeholder = "e.g. Sales" })
                    </div>
                </div>

                <hr class="my-2" />
                <small class="text-muted mb-1 d-block">User Active Status</small>

                <div class="form-check form-switch mt-2 mb-2">
                    @Html.CheckBoxFor(m => m.IsActive, new { @class = "form-check-input", id = "isActiveSwitch" })
                    <label class="form-check-label" for="isActiveSwitch">User Active</label>
                </div>

                <hr class="my-2" />
                <small class="text-muted mb-1 d-block">Roles</small>

                <div class="row g-2">
                    <div class="col-6">
                        <div class="form-check form-switch">
                            @Html.CheckBoxFor(m => m.IsDesigner, new { @class = "form-check-input", id = "isDesigner" })
                            <label class="form-check-label" for="isDesigner">Designer</label>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="form-check form-switch">
                            @Html.CheckBoxFor(m => m.IsSalesRep, new { @class = "form-check-input", id = "isSalesRep" })
                            <label class="form-check-label" for="isSalesRep">Sales Rep</label>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="form-check form-switch">
                            @Html.CheckBoxFor(m => m.IsEstimator, new { @class = "form-check-input", id = "isEstimator" })
                            <label class="form-check-label" for="isEstimator">Estimator</label>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="form-check form-switch">
                            @Html.CheckBoxFor(m => m.IsQuoteApprover, new { @class = "form-check-input", id = "isQuoteApprover" })
                            <label class="form-check-label" for="isQuoteApprover">Quote Approver</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="mt-3">
            <button type="submit" class="btn theme-button w-100">Update User</button>
        </div>
    </div>
}
