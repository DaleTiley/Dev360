@model MillenniumWebFixed.Models.AppUser
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Add User";
    ViewData.ModelState.Clear();
}

<div class="container mt-2">
    <div class="card shadow-sm border-0">
        <div class="card-header bg-dark text-white py-2 px-3">
            <h6 class="mb-0">Add New User</h6>
        </div>

        <div class="card-body py-3 px-3">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="mb-2">
                    @Html.LabelFor(model => model.Username, new { @class = "form-label fw-semibold" })
                    @Html.TextBoxFor(model => model.Username, new
                    {
                        @class = "form-control form-control-sm",
                        placeholder = "Enter username",
                        autocomplete = "off"
                    })
                </div>

                <div class="mb-2">
                    @Html.Label("Password", new { @class = "form-label fw-semibold" })
                    @Html.PasswordFor(model => model.PasswordHash, new
                    {
                        @class = "form-control form-control-sm",
                        placeholder = "Enter password",
                        autocomplete = "new-password"
                    })
                </div>

                <div class="mb-2">
                    @Html.LabelFor(model => model.FullName, new { @class = "form-label fw-semibold" })
                    @Html.TextBoxFor(model => model.FullName, new
                    {
                        @class = "form-control form-control-sm",
                        placeholder = "Enter full name"
                    })
                </div>

                <div class="mb-2">
                    @Html.LabelFor(model => model.Email, new { @class = "form-label fw-semibold" })
                    @Html.TextBoxFor(model => model.Email, new
                    {
                        @class = "form-control form-control-sm",
                        placeholder = "Enter email address",
                        type = "email"
                    })
                </div>

                <div class="mb-2">
                    @Html.LabelFor(model => model.UserLevel, new { @class = "form-label fw-semibold" })
                    @Html.DropDownListFor(model => model.UserLevel,
                        new SelectList(new[] { "Admin", "Standard", "ReadOnly" }),
                        "-- Select Role --",
                        new { @class = "form-select form-select-sm" })
                </div>

                <div class="mb-3 ps-1">
                    <div class="d-flex align-items-center gap-2">
                        @Html.CheckBoxFor(m => m.IsActive, new
                        {
                            @class = "form-check-input fs-6",
                            role = "switch",
                            id = "isActiveSwitch"
                        })
                        <label class="form-check-label mb-0" for="isActiveSwitch">User Active</label>
                    </div>
                </div>

                <div class="d-flex justify-content-between gap-2">
                    <a href="@Url.Action("Users", "Admin")" class="btn btn-outline-secondary btn-sm w-50 py-1">Cancel</a>
                    <button type="submit" class="btn btn-dark btn-sm w-50 py-1">Save</button>
                </div>
            }
        </div>
    </div>
</div>

